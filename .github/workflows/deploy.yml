name: Deploy to AWS Linux EC2
on: [push]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build and push
        run: |
          docker build -t fastapi_ci-cd_app .
          docker tag fastapi_ci-cd_app:latest ${{ secrets.ECR_REGISTRY }}:latest
          docker push ${{ secrets.ECR_REGISTRY }}:latest

      - name: Create .env and certs for upload
        run: |
          echo "${{ secrets.ENV_FILE_CONTENT }}" > .env
          mkdir -p certs
          echo "${{ secrets.JWT_PRIVATE_PEM }}" > certs/jwt-private.pem
          echo "${{ secrets.JWT_PUBLIC_PEM }}" > certs/jwt-public.pem

      - name: Upload .env and certs to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ".env,certs/jwt-private.pem,certs/jwt-public.pem"
          target: "~/app"

      - name: Deploy to EC2 (AWS Linux)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo yum update -y
            sudo yum install docker -y
            sudo service docker start

            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

            sudo docker pull ${{ secrets.ECR_REGISTRY }}:latest
            sudo docker stop fastapi-app || true
            sudo docker rm fastapi-app || true

            sudo docker run -d -p 8000:8000 \
              --name fastapi-app \
              --env-file ~/app/.env \
              -v ~/app/jwt-private.pem:/app/certs/jwt-private.pem \
              -v ~/app/jwt-public.pem:/app/certs/jwt-public.pem \
              ${{ secrets.ECR_REGISTRY }}:latest
